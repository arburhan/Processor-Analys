[{
    "id": 1,
    "eventKey":0,
    "question": "What is context api?",
    "answer":" react কাজ করে one way data flow অর্থাৎ প্যারেন্ট থেকে চাইল্ড ।  যদি আমাদের প্যারেন্ট কম্পনেন্ট থেকে চাইল্ডের চাইল্ড এ ডাটা পাঠাতে চাই তাহলে ২ টা উপায়ে পাঠানো যায় । ১। props ২। HOC . কিন্তু এগুলার মাধ্যমে ডাটা পাঠানো বেশ ঝামেলার । প্রথমে পারেন্ট থেকে চাইল্ড, তারপর চাইল্ড প্যারেন্ট থেকে তার চাইল্ড এ props drilling করে ডাটা পাঠাইতে হয় । কিন্তু উপরের চাইল্ড এর এসব ডাটার প্রয়োজন না থাকা সত্ত্বেও তাদের কাছে ডাটা পাঠানো হয় । এসমস্যার সমাধান করা হয় Context api দিয়ে । context অর্থ প্রসঙ্গ । এর মাধ্যমে props drilling না করে context তৈরি(const exampleContext = React.CreateContext{}) করার পর তা export(export default exampleContext) করতে হয় । এই context ২ টা জিনিস পাঠায় । ১। contextProvider ২। ContextConsumer. context ব্যবহার করতে চাইলে  Parent কে Context Provider দ্বারা চাইল্ড নিয়ে wrap করতে হয় এবং একটা value দিতে হয়  । তারপর যে গ্রহণ করবে তারে Context Consumer দ্বারা wrap করে গ্রহণ করতে হয় । মুলত context এর সুবিধা হল চাইল্ড এর ভেতরে যারে ডাটা দিতে চাই তারেই পাঠানো সম্ভব । "
},
{
    "id": 2,
    "eventKey":1,
    "question": "What is semantic tag?",
    "answer":" Semantic tag বা elements অর্থ হল মিনিংফুল tag বা এলিমেন্টস । মিনিংফুল বলতে এখানে বুঝানো হয় যে সব ট্যাগের অর্থ রয়েছে বা যে সব ট্যাগ এর নাম শুনলে বুঝা যায় এর কাজ কি । HTML5 থেকে semantic tag এর ব্যবহার শুরু হয়েছে । Semantic tag এর উদাহরণ দেয়ার আগে Non semantic tag গুলার উদাহরণ দিলে semantic tag ভাল ভাবে বুঝা যাবে । Non semantic tag এর উৎকৃষ্ট উদাহরন হল div,span প্রভৃতি । এই div,span ট্যাগ দিয়ে কিছুই বুঝা যায় না এর ভেতরে কি আছে বা থাকবে । এর ভেতরে text, audio না video না ছবি থাকবে বুঝা যায় না, আবার অইটার ভেতরে সবগুলা একত্রে থাকতেও পারে । আর semantic tag তার ব্যবহার সম্পর্কে অর্থ বহন করে । যেমন বলা যায় nav tag এর ভেতরে navigation bar এর কোড লেখা হয়, article tag এর ভেতরে কোনো কিছু সম্পর্কে লেখা থাকবে, header tag এর ভেতরে nav ট্যাগ, main tag এর ভেতরে ওয়েবসাইট এর যাবতীয় যা কিছু আছে তা থাকবে, নিচে footer tag এর মধ্যে সাইটের একদম নিচে কি থাকবে তা লেখা হয় । এরকম আরো ট্যাগ রয়েছে যেমন ঃ aside, mark, section, summery, time প্রভৃতি । এসব ওয়েব সাইটে একদম সাজানো গোছানো থাকবে এবং এসব ট্যাগ দেখেই বুঝা যায় এগুলার কাজ কি । এগুলাই semantic tag. "
},
{
    "id": 3,
    "eventKey":2,
    "question": "Inline vs block vs inline block",
    "answer": "১। inline elements এমন ইলিমেন্ট যা কয়েকটি ট্যাগ একই লাইনে পর পর  চলে আসে । যেমন span, img, a tag. এই ট্যাগ গুলো একই লাইনে চলে আসে, তার যতটুকু নিজস্ব যায়গা ততটুকু দখল করবে এবং অন্যের জন্য বাকি যায়গা রেখে দিবে । এটাকে ব্লক ইলিমেন্ট করতে চাইলে display:block; ব্যবহার করতে হবে । তখন শুধু তার নিজস্ব যায়গা না নিয়ে পুরো লাইন নিয়ে নিবে । ২। block elements হল এমন সব ইলিমেন্টস যা নিজস্ব যায়গা নেয়ার পরও পুরা লাইন দখল করে রাখে, অন্য কাউকে আর যায়গা দেয় না । উদাহরণ হিসেবে বলা যায় ঃ div, section, h1-h6, p প্রভৃতি ।এটাকে ইনলাইন ইলিমেন্ট করতে চাইলে display:inline; ব্যবহার করতে হবে । তখন শুধু তার নিজস্ব যায়গা নিবে এবং কাস্টম width, height নিবে না ।  ৩। inline-block elements এর কাজ হল ব্লক ইলিমেন্ট কে পাশাপাশি রেখে ব্লক ইনিমেন্ট এর মত কাজ করানো । এতে কাস্টম height, width দেয়া যায় । "
}
]